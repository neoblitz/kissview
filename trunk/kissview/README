+=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=+
| kissview v1.0								  |
| Arun Viswanathan (arunv@arunviswanathan.com)|
+=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=+

What is kissview?
=-=-=-=-=-=-=-=-=
kissview v1.0 is an ultrasimple yet powerful webserver log analysis tool. The rationale behind this 
tool is to output very simple statistics gleaned from an HTTP logfile. This tool is nowhere as 
feature-rich as compared to the power of awstats and the like and that is exactly the point behind 
this tool. Thus it is named kissview (Keep it Simple Stupid, Viewer).

I wanted something simple that satisfies the following needs:
1. Be as braindead and simple as possible.
2. Provide simple visualization of the usage of my site which i can check at a daily basis without 
   the hassles of logging in and digging into details to glean simple facts.  
3. Allow extensions to code as desired with very little effort.
4. Require no maintainance.
5. Provide cool visualizations.
6. Run on archived data, run locally or fetch data from a remote site.

Kissview takes in a Apache logfile(ASCII or Gzipped) and produces a static HTML file containing 
visualizations written using Google Visualization APIs. Thats it! Nothing more, Nothing less!

With the above in mind, i chose the following combination of techniques to implement kissview:
1. Simple shell oneliners to fetch and parse logs.
2. Python to read input from logs and produce a static HTML file.
3. Google Visualization APIs to produce neat javascript visualizations.
4. Google Visualization datasource APIs in python to read ASCII and convert it to JSON.  

Requirements
=-=-=-=-=-=-=
1. Python gviz_api (contained in the distribution)
   URL: http://code.google.com/apis/visualization/documentation/dev/gviz_api_lib.html
2. html2text (Normally contained in distributions else download and install)
   URL: http://www.mbayer.de/html2text/
3. curl 
4. The logmonitor.sh script uses the free geoip service http://geoiptool.com for geoip queries
	

Usage
=-=-=
1. First run logmonitor.sh as follows:
	./logmonitor.sh <path_to_accesslog> <path_to_outputlog> 

2. python kissview.py --log=<path_to_outputlog> --output=<path_to_outputhtml>


NOTES
=-=-=
1. kissview can be very easily extended to support any other logfile.Code is hopefully easy to understand.
2. Another way to do this would be to use a dynamic way of generating the HTML. Maybe i would do this sometime.
3. There is good reason for keeping the logmonitor and kissview.py. Assures robustness in face of failures.  
4. The logmonitor.sh is slow for now because of the geoiptool fetch for every IP.
5. This is tested on the standard Apache log format. If you use something different please modify kissview
   and logmonitor appropriately.
 
Thats It ! Enjoy 